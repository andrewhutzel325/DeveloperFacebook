{"ast":null,"code":"import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{getGithubRepos}from\"../../actions/profile\";import Spinner from\"../layout/Spinner\";var ProfileGithub=function ProfileGithub(_ref){var username=_ref.username,getGithubRepos=_ref.getGithubRepos,repos=_ref.repos;useEffect(function(){getGithubRepos(username);},[getGithubRepos]);return React.createElement(\"div\",{className:\"profile-github\"},React.createElement(\"h2\",{className:\"text-primary my-1\"},\"Github repos\"),repos===null?React.createElement(Spinner,null):repos.map(function(repo){return React.createElement(\"div\",{key:repo._id,className:\"repo bg-white p-1 my-1\"},React.createElement(\"div\",null,React.createElement(\"h4\",null,React.createElement(\"a\",{href:repo.html_url,target:\"_blank\",rel:\"noopener noreferrer\"},repo.name)),React.createElement(\"p\",null,repo.description)),React.createElement(\"div\",null,React.createElement(\"ul\",null,React.createElement(\"li\",{className:\"badge badge-primary\"},\"Stars: \",repo.stargazers_count),\" \",React.createElement(\"li\",{className:\"badge badge-dark\"},\"Watchers: \",repo.watchers_count),\" \",React.createElement(\"li\",{className:\"badge badge-primary\"},\"Forks: \",repo.forks_count))));}));};var mapStateToProps=function mapStateToProps(state){return{repos:state.profile.repos};};export default connect(mapStateToProps,{getGithubRepos:getGithubRepos})(ProfileGithub);","map":{"version":3,"sources":["C:/Users/Oxidation/Desktop/Full Stack Project/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","connect","getGithubRepos","Spinner","ProfileGithub","username","repos","map","repo","_id","html_url","name","description","stargazers_count","watchers_count","forks_count","mapStateToProps","state","profile"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyC,IAAtCC,CAAAA,QAAsC,MAAtCA,QAAsC,CAA5BH,cAA4B,MAA5BA,cAA4B,CAAZI,KAAY,MAAZA,KAAY,CAC7DN,SAAS,CAAC,UAAM,CACdE,cAAc,CAACG,QAAD,CAAd,CACD,CAFQ,CAEN,CAACH,cAAD,CAFM,CAAT,CAIA,MACE,4BAAK,SAAS,CAAC,gBAAf,EACE,0BAAI,SAAS,CAAC,mBAAd,iBADF,CAEGI,KAAK,GAAK,IAAV,CACC,oBAAC,OAAD,MADD,CAGCA,KAAK,CAACC,GAAN,CAAU,SAAAC,IAAI,QACZ,4BAAK,GAAG,CAAEA,IAAI,CAACC,GAAf,CAAoB,SAAS,CAAC,wBAA9B,EACE,+BACE,8BACE,yBACE,IAAI,CAAED,IAAI,CAACE,QADb,CAEE,MAAM,CAAC,QAFT,CAGE,GAAG,CAAC,qBAHN,EAIGF,IAAI,CAACG,IAJR,CADF,CADF,CASE,6BAAIH,IAAI,CAACI,WAAT,CATF,CADF,CAYE,+BACE,8BACE,0BAAI,SAAS,CAAC,qBAAd,YACUJ,IAAI,CAACK,gBADf,CADF,CAGQ,GAHR,CAIE,0BAAI,SAAS,CAAC,kBAAd,eACaL,IAAI,CAACM,cADlB,CAJF,CAMQ,GANR,CAOE,0BAAI,SAAS,CAAC,qBAAd,YACUN,IAAI,CAACO,WADf,CAPF,CADF,CAZF,CADY,EAAd,CALJ,CADF,CAqCD,CA1CD,CAkDA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCX,KAAK,CAAEW,KAAK,CAACC,OAAN,CAAcZ,KADW,CAAL,EAA7B,CAIA,cAAeL,CAAAA,OAAO,CACpBe,eADoB,CAEpB,CAAEd,cAAc,CAAdA,cAAF,CAFoB,CAAP,CAGbE,aAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n\r\n  return (\r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\">Github repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map(repo => (\r\n          <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\">\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className=\"badge badge-primary\">\r\n                  Stars: {repo.stargazers_count}\r\n                </li>{\" \"}\r\n                <li className=\"badge badge-dark\">\r\n                  Watchers: {repo.watchers_count}\r\n                </li>{\" \"}\r\n                <li className=\"badge badge-primary\">\r\n                  Forks: {repo.forks_count}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getGithubRepos }\r\n)(ProfileGithub);\r\n"]},"metadata":{},"sourceType":"module"}