{"ast":null,"code":"import React,{Fragment}from\"react\";import{Link}from\"react-router-dom\";import Moment from\"react-moment\";import{connect}from\"react-redux\";import{addLike,removeLike,deletePost}from\"../../actions/post\";var PostItem=function PostItem(_ref){var auth=_ref.auth,addLike=_ref.addLike,removeLike=_ref.removeLike,deletePost=_ref.deletePost,_ref$post=_ref.post,_id=_ref$post._id,text=_ref$post.text,name=_ref$post.name,avatar=_ref$post.avatar,user=_ref$post.user,likes=_ref$post.likes,comments=_ref$post.comments,date=_ref$post.date,showActions=_ref.showActions;return React.createElement(\"div\",{class:\"post bg-white p-1 my-1\"},React.createElement(\"div\",null,React.createElement(Link,{to:\"/profile/\".concat(user)},React.createElement(\"img\",{class:\"round-img\",src:avatar,alt:\"\"}),React.createElement(\"h4\",null,name))),React.createElement(\"div\",null,React.createElement(\"p\",{class:\"my-1\"},text),React.createElement(\"p\",{class:\"post-date\"},\"Posted on \",React.createElement(Moment,{format:\"YYYY/MM/DD\"},date)),showActions&&React.createElement(Fragment,null,React.createElement(\"button\",{onClick:function onClick(e){return addLike(_id);},type:\"button\",class:\"btn btn-light\"},React.createElement(\"i\",{class:\"fas fa-thumbs-up\"}),React.createElement(\"span\",null,likes.length>0&&React.createElement(\"span\",null,\" \",likes.length))),React.createElement(\"button\",{onClick:function onClick(e){return removeLike(_id);},type:\"button\",class:\"btn btn-light\"},React.createElement(\"i\",{class:\"fas fa-thumbs-down\"})),React.createElement(Link,{to:\"/posts/\".concat(_id),class:\"btn btn-primary\"},\"Discussion\",\" \",comments.length>0&&React.createElement(\"span\",{class:\"comment-count\"},comments.length)),!auth.loading&&user===auth.user._id&&React.createElement(\"button\",{onClick:function onClick(e){return deletePost(_id);},type:\"button\",class:\"btn btn-danger\"},React.createElement(\"i\",{class:\"fas fa-times\"})))));};PostItem.defaultProps={showActions:true};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps,{addLike:addLike,removeLike:removeLike,deletePost:deletePost})(PostItem);","map":{"version":3,"sources":["C:/Users/Oxidation/Desktop/Full Stack Project/client/src/components/posts/PostItem.js"],"names":["React","Fragment","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","loading","defaultProps","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,OAAT,CAAkBC,UAAlB,CAA8BC,UAA9B,KAAgD,oBAAhD,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,UACfC,CAAAA,IADe,MACfA,IADe,CAEfJ,OAFe,MAEfA,OAFe,CAGfC,UAHe,MAGfA,UAHe,CAIfC,UAJe,MAIfA,UAJe,gBAKfG,IALe,CAKPC,GALO,WAKPA,GALO,CAKFC,IALE,WAKFA,IALE,CAKIC,IALJ,WAKIA,IALJ,CAKUC,MALV,WAKUA,MALV,CAKkBC,IALlB,WAKkBA,IALlB,CAKwBC,KALxB,WAKwBA,KALxB,CAK+BC,QAL/B,WAK+BA,QAL/B,CAKyCC,IALzC,WAKyCA,IALzC,CAMfC,WANe,MAMfA,WANe,OAQf,4BAAK,KAAK,CAAC,wBAAX,EACE,+BACE,oBAAC,IAAD,EAAM,EAAE,oBAAcJ,IAAd,CAAR,EACE,2BAAK,KAAK,CAAC,WAAX,CAAuB,GAAG,CAAED,MAA5B,CAAoC,GAAG,CAAC,EAAxC,EADF,CAEE,8BAAKD,IAAL,CAFF,CADF,CADF,CAOE,+BACE,yBAAG,KAAK,CAAC,MAAT,EAAiBD,IAAjB,CADF,CAEE,yBAAG,KAAK,CAAC,WAAT,eACY,oBAAC,MAAD,EAAQ,MAAM,CAAC,YAAf,EAA6BM,IAA7B,CADZ,CAFF,CAKGC,WAAW,EACV,oBAAC,QAAD,MACE,8BACE,OAAO,CAAE,iBAAAC,CAAC,QAAIf,CAAAA,OAAO,CAACM,GAAD,CAAX,EADZ,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAC,eAHR,EAIE,yBAAG,KAAK,CAAC,kBAAT,EAJF,CAKE,gCAAOK,KAAK,CAACK,MAAN,CAAe,CAAf,EAAoB,oCAAQL,KAAK,CAACK,MAAd,CAA3B,CALF,CADF,CAQE,8BACE,OAAO,CAAE,iBAAAD,CAAC,QAAId,CAAAA,UAAU,CAACK,GAAD,CAAd,EADZ,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAC,eAHR,EAIE,yBAAG,KAAK,CAAC,oBAAT,EAJF,CARF,CAcE,oBAAC,IAAD,EAAM,EAAE,kBAAYA,GAAZ,CAAR,CAA2B,KAAK,CAAC,iBAAjC,eACa,GADb,CAEGM,QAAQ,CAACI,MAAT,CAAkB,CAAlB,EACC,4BAAM,KAAK,CAAC,eAAZ,EAA6BJ,QAAQ,CAACI,MAAtC,CAHJ,CAdF,CAoBG,CAACZ,IAAI,CAACa,OAAN,EAAiBP,IAAI,GAAKN,IAAI,CAACM,IAAL,CAAUJ,GAApC,EACC,8BACE,OAAO,CAAE,iBAAAS,CAAC,QAAIb,CAAAA,UAAU,CAACI,GAAD,CAAd,EADZ,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAC,gBAHR,EAIE,yBAAG,KAAK,CAAC,cAAT,EAJF,CArBJ,CANJ,CAPF,CARe,EAAjB,CAuDAH,QAAQ,CAACe,YAAT,CAAwB,CACtBJ,WAAW,CAAE,IADS,CAAxB,CAYA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChChB,IAAI,CAAEgB,KAAK,CAAChB,IADoB,CAAL,EAA7B,CAIA,cAAeL,CAAAA,OAAO,CACpBoB,eADoB,CAEpB,CAAEnB,OAAO,CAAPA,OAAF,CAAWC,UAAU,CAAVA,UAAX,CAAuBC,UAAU,CAAVA,UAAvB,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => (\r\n  <div class=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img class=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p class=\"my-1\">{text}</p>\r\n      <p class=\"post-date\">\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n      </p>\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={e => addLike(_id)}\r\n            type=\"button\"\r\n            class=\"btn btn-light\">\r\n            <i class=\"fas fa-thumbs-up\"></i>\r\n            <span>{likes.length > 0 && <span> {likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={e => removeLike(_id)}\r\n            type=\"button\"\r\n            class=\"btn btn-light\">\r\n            <i class=\"fas fa-thumbs-down\"></i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span class=\"comment-count\">{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={e => deletePost(_id)}\r\n              type=\"button\"\r\n              class=\"btn btn-danger\">\r\n              <i class=\"fas fa-times\"></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addLike, removeLike, deletePost }\r\n)(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}