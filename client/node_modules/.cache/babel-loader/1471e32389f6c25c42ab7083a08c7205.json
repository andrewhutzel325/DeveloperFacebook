{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oxidation\\\\Desktop\\\\Full Stack Project\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  auth,\n  addLike,\n  removeLike,\n  deletePost,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => React.createElement(\"div\", {\n  class: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: \"profile.html\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  class: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, name))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  class: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, text), React.createElement(\"p\", {\n  class: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"Posted on \", React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, date)), React.createElement(\"button\", {\n  onClick: e => addLike(_id),\n  type: \"button\",\n  class: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  class: \"fas fa-thumbs-up\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, likes.length > 0 && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \" \", likes.length))), React.createElement(\"button\", {\n  onClick: e => removeLike(_id),\n  type: \"button\",\n  class: \"btn btn-light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  class: \"fas fa-thumbs-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n})), React.createElement(Link, {\n  to: \"/posts/\".concat(_id),\n  class: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \"Discussion\", \" \", comments.length > 0 && React.createElement(\"span\", {\n  class: \"comment-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  onClick: e => deletePost(_id),\n  type: \"button\",\n  class: \"btn btn-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  class: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}))));\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["C:/Users/Oxidation/Desktop/Full Stack Project/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","e","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  post: { _id, text, name, avatar, user, likes, comments, date }\r\n}) => (\r\n  <div class=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <a href=\"profile.html\">\r\n        <img class=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </a>\r\n    </div>\r\n    <div>\r\n      <p class=\"my-1\">{text}</p>\r\n      <p class=\"post-date\">\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n      </p>\r\n      <button onClick={e => addLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n        <i class=\"fas fa-thumbs-up\"></i>\r\n        <span>{likes.length > 0 && <span> {likes.length}</span>}</span>\r\n      </button>\r\n      <button\r\n        onClick={e => removeLike(_id)}\r\n        type=\"button\"\r\n        class=\"btn btn-light\">\r\n        <i class=\"fas fa-thumbs-down\"></i>\r\n      </button>\r\n      <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\r\n        Discussion{\" \"}\r\n        {comments.length > 0 && (\r\n          <span class=\"comment-count\">{comments.length}</span>\r\n        )}\r\n      </Link>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={e => deletePost(_id)}\r\n          type=\"button\"\r\n          class=\"btn btn-danger\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addLike, removeLike, deletePost }\r\n)(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}