{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oxidation\\\\Desktop\\\\Full Stack Project\\\\client\\\\src\\\\components\\\\post\\\\Post.js\";\nimport React, { useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport { getPost } from \"../../actions/post\";\nimport CommentForm from \"./CommentForm\";\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/posts\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" \", \"Back To Posts\"), React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, post.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    postId: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["C:/Users/Oxidation/Desktop/Full Stack Project/client/src/components/post/Post.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Link","Spinner","PostItem","getPost","CommentForm","Post","post","loading","match","params","id","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEF,EAAAA,OAAF;AAAWG,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAC5DZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACP,OAAD,CAFM,CAAT;AAIA,SAAOI,OAAO,IAAID,IAAI,KAAK,IAApB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,kBADF,EAKE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,IAAI,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACxB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACH,GAA1B;AAA+B,IAAA,OAAO,EAAEG,OAAxC;AAAiD,IAAA,MAAM,EAAER,IAAI,CAACK,GAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAPF,CAHF;AAiBD,CAtBD;;AAwBAN,IAAI,CAACU,SAAL,GAAiB;AACfZ,EAAAA,OAAO,EAAEL,SAAS,CAACkB,IAAV,CAAeC,UADT;AAEfX,EAAAA,IAAI,EAAER,SAAS,CAACoB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CACpBoB,eADoB,EAEpB;AAAEhB,EAAAA;AAAF,CAFoB,CAAP,CAGbE,IAHa,CAAf","sourcesContent":["import React, { useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PostItem from \"../posts/PostItem\";\r\nimport { getPost } from \"../../actions/post\";\r\nimport CommentForm from \"./CommentForm\";\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to=\"/posts\" className=\"btn\">\r\n        {\" \"}\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map(comment => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPost }\r\n)(Post);\r\n"]},"metadata":{},"sourceType":"module"}